[{"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/index.js":"1","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/reportWebVitals.js":"2","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Login.jsx":"3","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Register.jsx":"4","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/NavBar/NavBar.jsx":"5","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Helpers/concert.js":"6","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/App.jsx":"7","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/FileUpload.jsx":"8","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/Main/main.jsx":"9","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Message.jsx":"10","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Progress.jsx":"11"},{"size":543,"mtime":1607372489458,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607371561043,"results":"14","hashOfConfig":"13"},{"size":2622,"mtime":1607407281727,"results":"15","hashOfConfig":"13"},{"size":3655,"mtime":1607399949479,"results":"16","hashOfConfig":"13"},{"size":1774,"mtime":1607410551421,"results":"17","hashOfConfig":"13"},{"size":187,"mtime":1607406739731,"results":"18","hashOfConfig":"13"},{"size":2068,"mtime":1607410385274,"results":"19","hashOfConfig":"13"},{"size":2443,"mtime":1607396893223,"results":"20","hashOfConfig":"13"},{"size":7905,"mtime":1607399162550,"results":"21","hashOfConfig":"13"},{"size":492,"mtime":1607396893223,"results":"22","hashOfConfig":"13"},{"size":448,"mtime":1607396721290,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"sxqt0f",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/index.js",[],["48","49"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/reportWebVitals.js",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Login.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Register.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/NavBar/NavBar.jsx",["50","51","52"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Helpers/concert.js",["53"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/App.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/FileUpload.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/Main/main.jsx",["54"],"import React from 'react';\nimport moment from 'moment';\n//import './calendar.css';\n\nexport default class Calendar extends React.Component {\n    state = {\n        dateContext: moment(),\n        today: moment(),\n        showMonthPopup: false,\n        showYearPopup: false,\n        selectedDay: null\n    }\n\n    constructor(props) {\n        super(props);\n        this.width = props.width || \"350px\";\n        this.style = props.style || {};\n        this.style.width = this.width; // add this\n    }\n\n\n    weekdays = moment.weekdays(); //[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednessday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    months = moment.months();\n\n    year = () => {\n        return this.state.dateContext.format(\"Y\");\n    }\n    month = () => {\n        return this.state.dateContext.format(\"MMMM\");\n    }\n    daysInMonth = () => {\n        return this.state.dateContext.daysInMonth();\n    }\n    currentDate = () => {\n        console.log(\"currentDate: \", this.state.dateContext.get(\"date\"));\n        return this.state.dateContext.get(\"date\");\n    }\n    currentDay = () => {\n        return this.state.dateContext.format(\"D\");\n    }\n\n    firstDayOfMonth = () => {\n        let dateContext = this.state.dateContext;\n        let firstDay = moment(dateContext).startOf('month').format('d'); // Day of week 0...1..5...6\n        return firstDay;\n    }\n\n    setMonth = (month) => {\n        let monthNo = this.months.indexOf(month);\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"month\", monthNo);\n        this.setState({\n            dateContext: dateContext\n        });\n    }\n\n    nextMonth = () => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).add(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onNextMonth && this.props.onNextMonth();\n    }\n\n    prevMonth = () => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).subtract(1, \"month\");\n        this.setState({\n            dateContext: dateContext\n        });\n        this.props.onPrevMonth && this.props.onPrevMonth();\n    }\n\n    onSelectChange = (e, data) => {\n        this.setMonth(data);\n        this.props.onMonthChange && this.props.onMonthChange();\n\n    }\n    SelectList = (props) => {\n        let popup = props.data.map((data) => {\n            return (\n                <div key={data}>\n                    <a href=\"#\" onClick={(e)=> {this.onSelectChange(e, data)}}>\n                        {data}\n                    </a>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"month-popup\">\n                {popup}\n            </div>\n        );\n    }\n\n    onChangeMonth = (e, month) => {\n        this.setState({\n            showMonthPopup: !this.state.showMonthPopup\n        });\n    }\n\n    MonthNav = () => {\n        return (\n            <span className=\"label-month\"\n                onClick={(e)=> {this.onChangeMonth(e, this.month())}}>\n                {this.month()}\n                {this.state.showMonthPopup &&\n                 <this.SelectList data={this.months} />\n                }\n            </span>\n        );\n    }\n\n    showYearEditor = () => {\n        this.setState({\n            showYearNav: true\n        });\n    }\n\n    setYear = (year) => {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", year);\n        this.setState({\n            dateContext: dateContext\n        })\n    }\n    onYearChange = (e) => {\n        this.setYear(e.target.value);\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    }\n\n    onKeyUpYear = (e) => {\n        if (e.which === 13 || e.which === 27) {\n            this.setYear(e.target.value);\n            this.setState({\n                showYearNav: false\n            })\n        }\n    }\n\n    YearNav = () => {\n        return (\n            this.state.showYearNav ?\n            <input\n                defaultValue = {this.year()}\n                className=\"editor-year\"\n                ref={(yearInput) => { this.yearInput = yearInput}}\n                onKeyUp= {(e) => this.onKeyUpYear(e)}\n                onChange = {(e) => this.onYearChange(e)}\n                type=\"number\"\n                placeholder=\"year\"/>\n            :\n            <span\n                className=\"label-year\"\n                onDoubleClick={(e)=> { this.showYearEditor()}}>\n                {this.year()}\n            </span>\n        );\n    }\n\n    onDayClick = (e, day) => {\n        this.setState({\n            selectedDay: day\n        }, () => {\n            console.log(\"SELECTED DAY: \", this.state.selectedDay);\n        });\n\n        this.props.onDayClick && this.props.onDayClick(e, day);\n    }\n\n    render() {\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n        let weekdays = this.weekdaysShort.map((day) => {\n            return (\n                <td key={day} className=\"week-day\">{day}</td>\n            )\n        });\n\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(<td key={i * 80} className=\"emptySlot\">\n                {\"\"}\n                </td>\n            );\n        }\n\n        console.log(\"blanks: \", blanks);\n\n        let daysInMonth = [];\n        for (let d = 1; d <= this.daysInMonth(); d++) {\n            let className = (d === this.currentDay() ? \"day current-day\": \"day\");\n            let selectedClass = (d === this.state.selectedDay ? \" selected-day \" : \"\")\n            daysInMonth.push(\n                <td key={d} className={className + selectedClass} >\n                    <span onClick={(e)=>{this.onDayClick(e, d)}}>{d}</span>\n                </td>\n            );\n        }\n\n\n        console.log(\"days: \", daysInMonth);\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n\n        totalSlots.forEach((row, i) => {\n            if ((i % 7) !== 0) {\n                cells.push(row);\n            } else {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                let insertRow = cells.slice();\n                rows.push(insertRow);\n            }\n        });\n\n        let trElems = rows.map((d, i) => {\n            return (\n                <tr key={i*100}>\n                    {d}\n                </tr>\n            );\n        })\n\n        return (\n            <div className=\"calendar-container\" style={this.style}>\n                <table className=\"calendar\">\n                    <thead>\n                        <tr className=\"calendar-header\">\n                            <td colSpan=\"5\">\n                                <this.MonthNav />\n                                {\" \"}\n                                <this.YearNav />\n                            </td>\n                            <td colSpan=\"2\" className=\"nav-month\">\n                                <i className=\"prev fa fa-fw fa-chevron-left\"\n                                    onClick={(e)=> {this.prevMonth()}}>\n                                </i>\n                                <i className=\"prev fa fa-fw fa-chevron-right\"\n                                    onClick={(e)=> {this.nextMonth()}}>\n                                </i>\n\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {weekdays}\n                        </tr>\n                        {trElems}\n                    </tbody>\n                </table>\n\n            </div>\n\n        );\n    }\n}","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Message.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Progress.jsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":40,"column":15,"nodeType":"61","endLine":43,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":52,"column":17,"nodeType":"61","endLine":52,"endColumn":71},{"ruleId":"59","severity":1,"message":"60","line":56,"column":17,"nodeType":"61","endLine":56,"endColumn":71},{"ruleId":"62","severity":1,"message":"63","line":3,"column":1,"nodeType":"64","messageId":"65","endLine":6,"endColumn":2},{"ruleId":"59","severity":1,"message":"66","line":85,"column":21,"nodeType":"61","endLine":85,"endColumn":80},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]