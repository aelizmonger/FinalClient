[{"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/index.js":"1","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/reportWebVitals.js":"2","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Login.jsx":"3","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Register.jsx":"4","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/NavBar/NavBar.jsx":"5","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Helpers/concert.js":"6","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/App.jsx":"7","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/FileUpload.jsx":"8","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/Main/main.jsx":"9","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Message.jsx":"10","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Progress.jsx":"11","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/modal.jsx":"12","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/ImageGrid.jsx":"13","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Hooks/useFirestore.js":"14","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Firebase/config.js":"15","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/Main/events.jsx":"16","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Hooks/useStorage.js":"17"},{"size":546,"mtime":1607552538341,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607371561043,"results":"20","hashOfConfig":"19"},{"size":2622,"mtime":1607407281727,"results":"21","hashOfConfig":"19"},{"size":3655,"mtime":1607399949479,"results":"22","hashOfConfig":"19"},{"size":1561,"mtime":1607632938056,"results":"23","hashOfConfig":"19"},{"size":187,"mtime":1607406739731,"results":"24","hashOfConfig":"19"},{"size":2217,"mtime":1607703262692,"results":"25","hashOfConfig":"19"},{"size":2812,"mtime":1607702819500,"results":"26","hashOfConfig":"19"},{"size":304,"mtime":1607660978145,"results":"27","hashOfConfig":"19"},{"size":492,"mtime":1607396893223,"results":"28","hashOfConfig":"19"},{"size":505,"mtime":1607644820261,"results":"29","hashOfConfig":"19"},{"size":616,"mtime":1607696471236,"results":"30","hashOfConfig":"19"},{"size":938,"mtime":1607644976958,"results":"31","hashOfConfig":"19"},{"size":627,"mtime":1607644856647,"results":"32","hashOfConfig":"19"},{"size":494,"mtime":1607644815493,"results":"33","hashOfConfig":"19"},{"size":4903,"mtime":1607698858116,"results":"34","hashOfConfig":"19"},{"size":935,"mtime":1607638352779,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"sxqt0f",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/index.js",[],["77","78"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/reportWebVitals.js",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Login.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/LoginRegister/Register.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/NavBar/NavBar.jsx",["79"],"//import React, { useState } from \"react\";\nimport {\n  Navbar,\n  NavItem,\n  NavbarBrand,\n  Nav\n} from \"reactstrap\";\n//import { Link } from \"react-router-dom\";\n\nconst NavbarComponent = (props) => {\n  // const [isOpen, setIsOpen] = useState(false);\n  // const toggle = () => setIsOpen(!isOpen);\n  return (\n    <Navbar dark expand=\"md\">\n      <NavbarBrand href=\"/\">Event Junkie</NavbarBrand>\n      {/* <NavbarToggler onClick={toggle} /> */}\n      {/* <Collapse isOpen={isOpen} navbar> */}\n      <Nav className=\"ml-auto\"> \n        {props.token ? (\n          <>\n            <NavItem>\n              <a\n              href=\"!#\"\n                className=\"nav-button\"\n                onClick={() => props.changeView(\"saved\")}\n              >\n                Tickets\n              </a>\n            </NavItem>\n            <NavItem>\n              <a\n              href=\"!#\"\n                className=\"nav-button\"\n                onClick={(e) => props.deleteSessionToken()}\n              >\n                Logout\n              </a>\n            </NavItem>\n          </>\n        ) : (\n          <>\n            <NavItem>\n              {props.isLogin ? (\n                <a href=\"!#\" className=\"nav-button\" onClick={props.toggleLogin}>\n                  Register\n                </a>\n              ) : (\n                <a className=\"nav-button\" onClick={props.toggleLogin}>\n                  Login\n                </a>\n              )}\n            </NavItem>\n          </>\n        )}\n      </Nav>\n      {/* </Collapse> */}\n    </Navbar>\n  );\n};\n\nexport default NavbarComponent;\n","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Helpers/concert.js",["80"],"let APIURL = '';\n\nswitch (window.location.hostname) {\n    case 'localhost' || '':\n        APIURL = 'http://localhost:5000';\n}\nconsole.log(window.location.hostname);\nexport default APIURL;","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/App.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/FileUpload.jsx",["81"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/Main/main.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Message.jsx",[],["82","83"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/Progress.jsx",[],["84","85"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/modal.jsx",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/FileUpload/ImageGrid.jsx",[],["86","87"],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Hooks/useFirestore.js",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Firebase/config.js",[],"/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Components/Main/events.jsx",["88","89","90"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\n\nconst getInfoWindowString = (event) => `\n    <div>\n      <div style=\"font-size: 16px;\">\n        ${event.name}\n      </div>\n      <div style=\"font-size: 14px;\">\n        <span style=\"color: grey;\">\n        ${event.info}\n        </span>\n        <span style=\"color: orange;\">${event.dates.start.dateTime}</span>\n      </div>\n    </div>`;\n\n\nconst handleApiLoaded = (map, maps, events) => {\n    const markers = [];\n    const infowindows = [];\n  \n    events.forEach((event) => {\n      markers.push(new maps.Marker({\n        position: new maps.LatLng(event._embedded.venues[0].location.latitude, event._embedded.venues[0].location.longitude),\n        // {\n        //   lat: event._embedded.venues[0].location.latitude,\n        //   lng: event._embedded.venues[0].location.longitude,\n        // },\n        map,\n      }));\n  \n      infowindows.push(new maps.InfoWindow({\n        content: getInfoWindowString(event),\n      }));\n    });\n  \n    markers.forEach((marker, i) => {\n      marker.addListener('click', () => {\n        infowindows[i].open(map, marker);\n      });\n    });\n  };\n\nconst Event = () => {\n    const [location, setLocation] = useState ('')\n    const [error, setError] = useState (false)\n    const [events, setEvents] = useState ([])\n    const [center, setCenter] = useState (false)\n\n\n    //getLocation when app loads.\n    useEffect(getLocation, [])\n    //When location updates, fetch event data.\n    useEffect(async () => {\n       try {\n            setEvents( await fetchEvents (location))\n            setCenter({\n                lat: location.coords.latitude,\n                lng: location.coords.longitude\n            })\n       } catch (err) {\n           setError (err)\n       }\n    }, [location]) \n    function getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(setLocation, setError);\n        } else {\n            setError(\"Geolocation is not supported by this browser.\");\n        }\n    }\n      return (\n        <div>\n          <p id=\"location\">Events Near You </p>\n          {center && events.length ? (\n          <div style={{ height: '100vh', width: '100%' }}>\n                <GoogleMapReact\n                defaultCenter={center}\n                defaultZoom={10}\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps, events)}\n                />\n            </div>\n            ) : null}\n          <div id=\"events\" >\n              {events.map((event, index) => { \n                  const img = event.images.find((image) => {\n                        return image.ratio == '3_2'\n                  })\n                  const imgSrc = img.url || false \n                  return (\n                      <div id=\"image\" key={index}> \n                      <div className=\"eventImage\">\n                          {imgSrc ? <img src={imgSrc} alt=\"\" /> : null}\n                      </div>\n                        <p>\n                            {event.name}\n                            {event.info}\n                            {event.dates.start.dateTime}\n                        </p>\n                      </div>\n                  )\n              } )}\n          </div>\n        </div>\n      );\n    }\n export default Event;\n\n\nasync function fetchEvents(position) {\n    try {\n\n    \n    const { latitude, longitude } = position.coords\n    \n    const response = await axios.get( `http://localhost:5000/api/events/${latitude}/${longitude}`)\n    return response.data\n    } catch (err) {\n       throw err\n    }\n}\n\n\n// function showError(error) {\n//     switch(error.code) {\n//         case error.PERMISSION_DENIED:\n//             x.innerHTML = \"User denied the request for Geolocation.\"\n//             break;\n//         case error.POSITION_UNAVAILABLE:\n//             x.innerHTML = \"Location information is unavailable.\"\n//             break;\n//         case error.TIMEOUT:\n//             x.innerHTML = \"The request to get user location timed out.\"\n//             break;\n//         case error.UNKNOWN_ERROR:\n//             x.innerHTML = \"An unknown error occurred.\"\n//             break;\n//     }\n// }\n\n\n\n\n\n// function initMap(position, json) {\n//   var mapDiv = document.getElementById('map');\n//   var map = new google.maps.Map(mapDiv, {\n//     center: {lat: position.coords.latitude, lng: position.coords.longitude},\n//     zoom: 10\n//   });\n//   for(var i=0; i<json.page.size; i++) {\n//     addMarker(map, json._embedded.events[i]);\n//   }\n// }\n\n// function addMarker(map, event) {\n//   var marker = new google.maps.Marker({\n//     position: new google.maps.LatLng(event._embedded.venues[0].location.latitude, event._embedded.venues[0].location.longitude),\n//     map: map\n//   });\n//   marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n//   console.log(marker);\n// }\n\n\n\n\n","/Users/AddyMonger/Desktop/wd64-Sept2020/projects/WDFinalProject/Client/src/Hooks/useStorage.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":48,"column":17,"nodeType":"97","endLine":48,"endColumn":71},{"ruleId":"98","severity":1,"message":"99","line":3,"column":1,"nodeType":"100","messageId":"101","endLine":6,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":60,"column":8,"nodeType":"97","endLine":60,"endColumn":24},{"ruleId":"91","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"91","replacedBy":"108"},{"ruleId":"93","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":47,"column":12,"nodeType":"112","messageId":"113","endLine":47,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":55,"column":15,"nodeType":"116","endLine":65,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":88,"column":44,"nodeType":"119","messageId":"120","endLine":88,"endColumn":46},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["121"],["122"],["121"],["122"],["121"],["122"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]